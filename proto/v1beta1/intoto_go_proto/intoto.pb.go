// Code generated by protoc-gen-go. DO NOT EDIT.
// source: intoto.proto

package intoto_go_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A signature object consists of the KeyID used and the signature itself.
type Signature struct {
	Keyid                string   `protobuf:"bytes,1,opt,name=keyid,proto3" json:"keyid,omitempty"`
	Sig                  string   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1442eade79a66571, []int{0}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetKeyid() string {
	if m != nil {
		return m.Keyid
	}
	return ""
}

func (m *Signature) GetSig() string {
	if m != nil {
		return m.Sig
	}
	return ""
}

// An object defined to capture the by products of a step.
type ByProductObject struct {
	ReturnValue          int32    `protobuf:"varint,1,opt,name=return_value,json=return-value,proto3" json:"return_value,omitempty"`
	Stderr               string   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Stdout               string   `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ByProductObject) Reset()         { *m = ByProductObject{} }
func (m *ByProductObject) String() string { return proto.CompactTextString(m) }
func (*ByProductObject) ProtoMessage()    {}
func (*ByProductObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_1442eade79a66571, []int{1}
}

func (m *ByProductObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ByProductObject.Unmarshal(m, b)
}
func (m *ByProductObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ByProductObject.Marshal(b, m, deterministic)
}
func (m *ByProductObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ByProductObject.Merge(m, src)
}
func (m *ByProductObject) XXX_Size() int {
	return xxx_messageInfo_ByProductObject.Size(m)
}
func (m *ByProductObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ByProductObject.DiscardUnknown(m)
}

var xxx_messageInfo_ByProductObject proto.InternalMessageInfo

func (m *ByProductObject) GetReturnValue() int32 {
	if m != nil {
		return m.ReturnValue
	}
	return 0
}

func (m *ByProductObject) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *ByProductObject) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

// This corrresponds to the core in-toto link attestation.
type Link struct {
	// This field denotes the type of metadata being handled - in this case, the
	// value is always "link".
	XType string `protobuf:"bytes,1,opt,name=_type,proto3" json:"_type,omitempty"`
	// This field contains the name of the step the link attestation was generated
	// for.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This field contains the full command executed for the step. This can also
	// be empty if attestations are generated for operations that aren't directly
	// mapped to a specific command.
	Command []string `protobuf:"bytes,3,rep,name=command,proto3" json:"command,omitempty"`
	// Materials are the supply chain artifacts that go into the step and are used
	// for the operation performed.
	Materials map[string]*_struct.Struct `protobuf:"bytes,4,rep,name=materials,proto3" json:"materials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Products are the supply chain artifacts generated as a result of the step.
	Products map[string]*_struct.Struct `protobuf:"bytes,5,rep,name=products,proto3" json:"products,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// By Products are made up of the data that is generated as part of a software
	// supply chain step, but are not the actual result of the step.
	Byproducts *ByProductObject `protobuf:"bytes,6,opt,name=byproducts,proto3" json:"byproducts,omitempty"`
	// This is a field that can be used to capture information about the
	// environment.
	Environment          map[string]string `protobuf:"bytes,7,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_1442eade79a66571, []int{2}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetXType() string {
	if m != nil {
		return m.XType
	}
	return ""
}

func (m *Link) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Link) GetCommand() []string {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Link) GetMaterials() map[string]*_struct.Struct {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Link) GetProducts() map[string]*_struct.Struct {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Link) GetByproducts() *ByProductObject {
	if m != nil {
		return m.Byproducts
	}
	return nil
}

func (m *Link) GetEnvironment() map[string]string {
	if m != nil {
		return m.Environment
	}
	return nil
}

// This corresponds to a full signed attestation - it is made up of one or more
// signatures and the core link attestation itself.
type InToto struct {
	Signatures           []*Signature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Link                 *Link        `protobuf:"bytes,2,opt,name=link,json=signed,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *InToto) Reset()         { *m = InToto{} }
func (m *InToto) String() string { return proto.CompactTextString(m) }
func (*InToto) ProtoMessage()    {}
func (*InToto) Descriptor() ([]byte, []int) {
	return fileDescriptor_1442eade79a66571, []int{3}
}

func (m *InToto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InToto.Unmarshal(m, b)
}
func (m *InToto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InToto.Marshal(b, m, deterministic)
}
func (m *InToto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InToto.Merge(m, src)
}
func (m *InToto) XXX_Size() int {
	return xxx_messageInfo_InToto.Size(m)
}
func (m *InToto) XXX_DiscardUnknown() {
	xxx_messageInfo_InToto.DiscardUnknown(m)
}

var xxx_messageInfo_InToto proto.InternalMessageInfo

func (m *InToto) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *InToto) GetLink() *Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "grafeas.v1beta1.intoto.Signature")
	proto.RegisterType((*ByProductObject)(nil), "grafeas.v1beta1.intoto.ByProductObject")
	proto.RegisterType((*Link)(nil), "grafeas.v1beta1.intoto.Link")
	proto.RegisterMapType((map[string]string)(nil), "grafeas.v1beta1.intoto.Link.EnvironmentEntry")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "grafeas.v1beta1.intoto.Link.MaterialsEntry")
	proto.RegisterMapType((map[string]*_struct.Struct)(nil), "grafeas.v1beta1.intoto.Link.ProductsEntry")
	proto.RegisterType((*InToto)(nil), "grafeas.v1beta1.intoto.InToto")
}

func init() { proto.RegisterFile("intoto.proto", fileDescriptor_1442eade79a66571) }

var fileDescriptor_1442eade79a66571 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0xc5, 0x71, 0xe2, 0xce, 0x37, 0xdd, 0x56, 0x44, 0xe9, 0xbc, 0xd0, 0x87, 0xcc, 0x2f, 0x0b,
	0x1b, 0x91, 0x69, 0xfa, 0x52, 0xf6, 0x30, 0x68, 0xa1, 0x2b, 0x85, 0x8d, 0x16, 0xb7, 0x7b, 0x19,
	0x8c, 0xe0, 0x0f, 0xd5, 0xd3, 0x12, 0x4b, 0x41, 0x96, 0x03, 0x7e, 0xda, 0x7f, 0xd9, 0x6f, 0xdb,
	0x0f, 0x19, 0x96, 0x64, 0xd7, 0x2d, 0x4d, 0x9e, 0xfa, 0x14, 0xdd, 0x9b, 0x73, 0x8e, 0x8f, 0x8e,
	0xee, 0x85, 0x5d, 0xca, 0x24, 0x97, 0x1c, 0xaf, 0x04, 0x97, 0x1c, 0x1d, 0x64, 0x22, 0xba, 0x23,
	0x51, 0x81, 0xd7, 0x47, 0x31, 0x91, 0xd1, 0x11, 0xd6, 0xff, 0x8e, 0x0e, 0x33, 0xce, 0xb3, 0x25,
	0x09, 0x14, 0x2a, 0x2e, 0xef, 0x82, 0x42, 0x8a, 0x32, 0x91, 0x9a, 0xe5, 0x1f, 0x83, 0x7b, 0x43,
	0x33, 0x16, 0xc9, 0x52, 0x10, 0xb4, 0x0f, 0x83, 0x05, 0xa9, 0x68, 0xea, 0x59, 0x63, 0x6b, 0xe2,
	0x86, 0xba, 0x40, 0x7b, 0x60, 0x17, 0x34, 0xf3, 0x7a, 0xaa, 0x57, 0x1f, 0x7d, 0x02, 0xaf, 0xcf,
	0xaa, 0x6b, 0xc1, 0xd3, 0x32, 0x91, 0x57, 0xf1, 0x6f, 0x92, 0x48, 0xe4, 0xc3, 0xae, 0x20, 0xb2,
	0x14, 0x6c, 0xbe, 0x8e, 0x96, 0x25, 0x51, 0x0a, 0x83, 0xd0, 0xf4, 0xa6, 0xaa, 0x87, 0x0e, 0xc0,
	0x29, 0x64, 0x4a, 0x84, 0x30, 0x5a, 0xa6, 0x32, 0x7d, 0x5e, 0x4a, 0xcf, 0x6e, 0xfb, 0xbc, 0x94,
	0xfe, 0xbf, 0x3e, 0xf4, 0xbf, 0x52, 0xb6, 0xa8, 0x7d, 0xcd, 0x65, 0xb5, 0x22, 0x8d, 0x2f, 0x55,
	0x20, 0x04, 0x7d, 0x16, 0xe5, 0xc4, 0x88, 0xa9, 0x33, 0xf2, 0x60, 0x27, 0xe1, 0x79, 0x1e, 0xb1,
	0xd4, 0xb3, 0xc7, 0xf6, 0xc4, 0x0d, 0x9b, 0x12, 0x5d, 0x82, 0x9b, 0x47, 0x92, 0x08, 0x1a, 0x2d,
	0x0b, 0xaf, 0x3f, 0xb6, 0x27, 0xc3, 0xd9, 0x47, 0xfc, 0x74, 0x64, 0xb8, 0xfe, 0x28, 0xfe, 0xd6,
	0xa0, 0xcf, 0x99, 0x14, 0x55, 0x78, 0xcf, 0x46, 0x5f, 0xe0, 0xc5, 0x4a, 0x5f, 0xbe, 0xf0, 0x06,
	0x4a, 0xe9, 0xc3, 0x56, 0x25, 0x93, 0x94, 0x11, 0x6a, 0xb9, 0xe8, 0x02, 0x20, 0xae, 0x5a, 0x25,
	0x67, 0x6c, 0x4d, 0x86, 0xb3, 0xf7, 0x9b, 0x94, 0x1e, 0x05, 0x1e, 0x76, 0xa8, 0xe8, 0x0a, 0x86,
	0x84, 0xad, 0xa9, 0xe0, 0x2c, 0x27, 0x4c, 0x7a, 0x3b, 0xca, 0xd3, 0x74, 0xab, 0xa7, 0xf3, 0x7b,
	0xbc, 0xb6, 0xd5, 0x55, 0x18, 0x7d, 0x87, 0x57, 0x0f, 0xaf, 0x5f, 0x0f, 0xc1, 0x82, 0x54, 0xe6,
	0x01, 0xea, 0x23, 0x9a, 0xc2, 0x40, 0x3f, 0x75, 0x4f, 0x19, 0x7f, 0x83, 0xf5, 0x9c, 0xe1, 0x66,
	0xce, 0xf0, 0x8d, 0x9a, 0xb3, 0x50, 0xa3, 0x3e, 0xf5, 0x4e, 0xac, 0xd1, 0x2d, 0xbc, 0x7c, 0x90,
	0xc5, 0xf3, 0xa8, 0x7e, 0x86, 0xbd, 0xc7, 0xb7, 0x79, 0x42, 0x78, 0xbf, 0x2b, 0xec, 0x76, 0xf8,
	0xfe, 0x1f, 0x70, 0x2e, 0xd9, 0x6d, 0xbd, 0x42, 0xa7, 0x00, 0x45, 0xb3, 0x0c, 0x85, 0x67, 0xa9,
	0x18, 0xdf, 0x6d, 0x8a, 0xb1, 0x5d, 0x9b, 0xb0, 0x43, 0x42, 0x33, 0xe8, 0x2f, 0x29, 0x5b, 0x18,
	0xfb, 0x87, 0xdb, 0xde, 0x20, 0x74, 0x6a, 0x1e, 0x49, 0xcf, 0x7e, 0xc2, 0x5b, 0xca, 0x37, 0x20,
	0xaf, 0xad, 0x1f, 0x27, 0x19, 0x95, 0xbf, 0xca, 0x18, 0x27, 0x3c, 0x0f, 0x0c, 0xa8, 0xfd, 0x55,
	0xb1, 0x04, 0x86, 0x12, 0x68, 0xca, 0x3c, 0xe3, 0x73, 0xd5, 0xff, 0xdb, 0xb3, 0x2f, 0xc2, 0xd3,
	0xd8, 0x51, 0xc5, 0xf1, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0xe3, 0x7f, 0xc5, 0x2f, 0x04,
	0x00, 0x00,
}
